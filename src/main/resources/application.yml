server:
  port: 8080    #配置tomcat启动端口号
spring:
  main:
    allow-bean-definition-overriding: true    #允许bean定义覆盖，因为shardingsphere给我们创建了一个数据源，但是我们自己又创建了一个数据源，所以要用到覆盖
  shardingsphere:
    datasource:
      names:
        master,slave                 #数据源名字，可以有多个从数据库
      # 主数据源
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.10.133:3306/reggie?characterEncoding=utf-8
        username: root
        password: 123456
      # 从数据源，可以有多个从数据库
      slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.10.134:3306/reggie?characterEncoding=utf-8
        username: root
        password: 123456
    masterslave:
      # 读写分离配置
      load-balance-algorithm-type: round_robin #轮询,第一个操作执行在一号数据库，第二个操作执行在二号数据库，第三个操作又是一号数据库，依次类推
      # 最终的数据源名称，bean的名字
      name: dataSource
      # 主库数据源名称
      master-data-source-name: master
      # 从库数据源名称列表，多个逗号分隔
      slave-data-source-names: slave
    props:
      sql:
        show: true #开启SQL显示，默认false，控制台输出SQL
  application:
    name: reggie_take_out     #指定应用名称，默认是项目名
  redis:
    host: 192.168.10.133
    password: wzsallp5201314
    database: 0
    port: 6379
  cache:
    redis:
      time-to-live: 1800000  #设置缓存过期时间,单位为毫秒
mybatis-plus:
  configuration:
    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl   #使用默认日志
    use-generated-keys: true
  global-config:
    db-config:
      id-type: ASSIGN_ID        #雪花算法
reggie:
  path: D:\\upload\
